/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ftd;

import java.io.IOException;
import java.io.InputStream;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.module.SimpleModule;

import ftd.field.ScratchField;
import ftd.field.ScratchFieldDeserializer;

public class Library {

	public static void main(String[] args) throws JsonParseException, JsonMappingException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		SimpleModule module = new SimpleModule();
		// module.addDeserializer(ScratchInput.class, new ScratchInputDeserializer());
		module.addDeserializer(ScratchField.class, new ScratchFieldDeserializer());
		mapper.registerModule(module);
		// mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);

		// simpleJsonTest(mapper);
		biggerJsonTest(mapper);
	}

	private static void biggerJsonTest(ObjectMapper mapper)
			throws IOException, JsonParseException, JsonMappingException {
		ClassLoader classloader = Thread.currentThread().getContextClassLoader();
		InputStream is = classloader.getResourceAsStream("biggertest.json");
		ScratchBlocks sratchBigger = mapper.readValue(is, ScratchBlocks.class);
		sratchBigger.init();
		System.out.println(sratchBigger);
		System.out.println(sratchBigger.generateSetupCode());
		System.out.println(sratchBigger.getTopLevelBlocks().get(0).generateCode());
		System.out.println("------------");
	}

	private static void simpleJsonTest(ObjectMapper mapper)
			throws IOException, JsonParseException, JsonMappingException {
		ClassLoader classloader = Thread.currentThread().getContextClassLoader();
		InputStream is = classloader.getResourceAsStream("scratch.json");
		ScratchBlocks sratchSimple = mapper.readValue(is, ScratchBlocks.class);
		sratchSimple.init();
		System.out.println(sratchSimple);
		System.out.println(sratchSimple.generateSetupCode());
		System.out.println(sratchSimple.getTopLevelBlocks().get(0).generateCode());
		System.out.println("------------");
	}
}
